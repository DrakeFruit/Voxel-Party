@using System
@using System.IO
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Network;
@inherits Panel

<root>
	<div class="quit" @onclick=@( () => Menu.menuState = Menu.State.None )>Back</div>

	<div class="panel-header">
		<h2>CHARACTER</h2>
	</div>
	
	<div class="carousel">
		<div class="arrow" @onclick=@( () => Selected-- )>◀</div>
		<div class="skins">
			@for ( var i = 0; i < Skins.Count; i++ )
			{
				var skin = new Skin{ Username = Skins[i].Username, Texture = Skins[i].Texture };
				if ( !skin.Texture.IsValid() && skin.Username.Length == 0 ) { continue; }

				var scale = Math.Max(0.1, Math.Pow(0.8, Math.Abs(i - Selected)));
				var translateX = -50 + (i - Selected) * 50;
				var translateY = -50;

				<SkinPreview class="preview @( i == Selected ? "selected" : "")" SkinName=@skin.Username SkinTexture=@skin.Texture 
				             style=@(i == Selected ? 
					                   $"transform: translate({translateX}%, {translateY}%) scale(1)"
					                   : $"transform: translate({translateX}%, {translateY}%) scale({scale}); opacity: {scale * 1.5}" 
				                   )/>
			}
		</div>
		<div class="arrow" @onclick=@( () => Selected++ )>▶</div>
	</div>
	
	<div class="options">
		<TextEntry class="username-input" @ref="Name" placeholder="@(Connection.Local.DisplayName)"/>
		<div class="add-button" @onclick=@( () => AddSkin(Name.Text) )>Add</div>
	</div>
</root>

@code
{
	public List<Skin> Skins { get; set; } = new();
	public int Selected { get; set; }
	public TextEntry Name { get; set; }
	
	public struct Skin
	{
		public string Username;
		public Texture Texture;
	}

	public CharacterCreator()
	{
		var path = "materials/models/skins/";
		foreach (var i in FileSystem.Mounted.FindFile( path, "*.png", true )
			         .Select( x => Texture.Load(FileSystem.Mounted, path + x ) ) )
		{
			if ( Skins.FirstOrDefault( x => x.Texture == i ).Texture.IsValid() ) continue;
			Skins.Add(new Skin{Texture = i});
		}
	}

	public override void Tick()
	{
		Selected = Selected.Clamp( 0, Skins.Count - 1 );
	}

	public void AddSkin( string name )
	{
		Skins.Add(new Skin{Username = name});
	}

	protected override int BuildHash() => HashCode.Combine( Skins.GetHashCode(), Selected );
}
