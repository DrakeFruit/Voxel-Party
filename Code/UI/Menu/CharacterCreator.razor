@using System
@using System.IO
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Network;
@using System.Linq;
@inherits Panel

<root>
	<div class="quit" @onclick=@( () => Menu.menuState = Menu.State.None )>Back</div>

	<div class="panel-header">
		<h2>CHARACTER</h2>
	</div>
	
	<div class="carousel">
		<div class="arrow" @onclick=@( () => Selected-- )>◀</div>
		<div class="skins">
			@foreach(var kv in Skins.WithIndex().OrderBy(kv=>-Math.Abs(kv.index - Selected)))
			{
				var i = kv.index;
				var skin = kv.value;
				if ( !skin.Texture.IsValid() && skin.Username.Length == 0 ) { continue; }

				var delta = i - Selected;
				var scale = Math.Max(0.1, Math.Pow(0.8, Math.Abs(delta)));
				var pos = 50 + 15 * (Math.Sign(delta) * (Math.Pow(Math.Abs(delta), 1.01f)));

				<SkinPreview class="preview @( i == Selected ? "selected" : "")" SkinTexture=@skin.Texture 
				             style=@(i == Selected ? 
					                   $"transform: translate(-50%, -50%) scale(1); left: {(int)(pos)}%"
					                   : $"transform: translate(-50%, -50%) scale({scale}); opacity: {scale * 1.5}; left: {(int)(pos)}%" 
				                   )/>
			}
		</div>
		<div class="arrow" @onclick=@( () => Selected++ )>▶</div>
	</div>
	
	<div class="options">
		<TextEntry class="username-input" @ref="Name" placeholder="@(Connection.Local.DisplayName)" onsubmit=@( () => AddSkin( Name.HasContent ? Name.Text : Name.Placeholder ) )/>
		<div class="add-button" @onclick=@( () => AddSkin( !string.IsNullOrWhiteSpace(Name.Text) ? Name.Text : Name.Placeholder ) )>Add</div>
	</div>
	<div class="errorMessage">@LastBadReason</div>
</root>
