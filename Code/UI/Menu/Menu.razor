@using System
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Network;
@inherits PanelComponent

<root class="@(IsVisible ? "" : "hidden")">
    <div class="menu-background"></div>
    <div class="menu-container">
	    <div class="logo-section">
		    <div class="logo-image"></div>
	    </div>
        
	    <div class="buttons-section">
		    <div class="menu-item" @onclick=@( () => menuState = State.Create )>
			    <span>Create Lobby</span>
			    <div class="hover-line"></div>
		    </div>
		    <div class="menu-item" @onclick=@( () => menuState = State.Join )>
			    <span>Join Lobby</span>
			    <div class="hover-line"></div>
		    </div>
		    @* <div class="menu-item" @onclick=@( () => menuState = State.Settings )> *@
			   @*  <span>SETTINGS</span> *@
			   @*  <div class="hover-line"></div> *@
		    @* </div> *@

		    <div class="menu-item" @onclick=@( () => ExitGame() )>
			    <span>Quit</span>
			    <div class="hover-line"></div>
		    </div>
	    </div>
    </div>	
	<LobbyCreator style="@(menuState == State.Create ? "opacity: 1; pointer-events: all;" : "opacity: 0; pointer-events: none;")" @ref=lobbyCreator></LobbyCreator>
	<ServerList style="@(menuState == State.Join ? "opacity: 1; pointer-events: all;" : "opacity: 0; pointer-events: none;")" @ref=serverList></ServerList>
</root>

@code
{	
	public bool IsVisible { get; set; } = true;
	public LobbyCreator lobbyCreator { get; set; }
	public ServerList serverList { get; set; }

	public static State menuState { get; set; } = State.None;

    protected override int BuildHash() => HashCode.Combine( IsVisible, menuState );

    protected override void OnUpdate()
    {
	    if ( Input.EscapePressed ) Input.EscapePressed = false;
    }

    protected override void OnStart()
    {
	    menuState = State.None;
    }

    private void ExitGame()
    {
        Game.Close();
    }

    public enum State
    {
	    None,
	    Create,
	    Join,
	    Settings
    }
}
